{"version":3,"sources":["components/Modal/Modal.module.css","components/Button/Button.module.css","App.module.css","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","components/Loader/Loader.js","App.js","index.js","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","Searchbar","state","searchQuery","handleNameChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","className","s","searchbar","searchForm","this","type","searchForm_button","searchForm_button_label","onChange","searchForm_input","autocomplete","autofocus","placeholder","React","Component","ImageGalleryItem","webformatURL","openModal","tag","largeImageURL","id","onClick","imageGalleryItem","src","alt","width","imageGalleryItem_image","ImageGallery","images","imageGallery","map","Button","button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","console","log","target","window","addEventListener","removeEventListener","image","createPortal","overlay","modal","children","LoaderSpiner","loader","color","height","App","showModal","page","selectedImage","isLoading","resetState","handleFormSubmit","closeModal","onLoadMore","prevState","prevProps","fetch","then","response","ok","json","Promise","reject","Error","imageName","data","hits","arrayImage","catch","finally","scrollTo","top","body","scrollHeight","behavior","status","message","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f8702bd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__31hVZ\",\"modal\":\"Modal_modal__oWkcn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2rPJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3DDx3\"};","import React from 'react';\r\nimport s from './Searchbar.module.css';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default class Searchbar extends React.Component {\r\n    state = {\r\n    searchQuery: '',\r\n    };\r\n\r\n\r\n    handleNameChange = e => {\r\n        this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\r\n}\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.searchQuery.trim() === '') {\r\n             return  toast.error('Enter the name');\r\n\r\n        }\r\n        this.props.onSubmit(this.state.searchQuery);\r\n        this.setState({ searchQuery: '' });\r\n    }\r\n\r\n\r\n    \r\n    render() {\r\n    \r\n        return (\r\n            <header className={s.searchbar}>\r\n                <form className={s.searchForm} onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className={s.searchForm_button}>\r\n                        <span className={s.searchForm_button_label}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        value={this.state.searchQuery}\r\n                        onChange={this.handleNameChange}\r\n                        className={s.searchForm_input}\r\n                        type=\"text\"\r\n                        autocomplete=\"off\"\r\n                        autofocus\r\n                        placeholder=\"Search images and photos\"\r\n                    />\r\n                </form>\r\n            </header>)\r\n    }\r\n}\r\n Searchbar.propTypes = {\r\n     onSubmit: PropTypes.string.isRequired,\r\n     handleNameChange: PropTypes.func.isRequired,\r\n     handleNameChange: PropTypes.func.isRequired,\r\n     \r\n};\r\n ","import React from 'react';\r\nimport s from './ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ImageGalleryItem = ({webformatURL, openModal, largeImageURL, tag, id }) => {\r\n    return (\r\n        <li  onClick={openModal} className={s.imageGalleryItem}>\r\n            <img src={webformatURL} alt={tag} width={480} className={s.imageGalleryItem_image} />\r\n</li>\r\n            \r\n  )\r\n  }\r\n\r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n   ","import React from 'react';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from './ImageGalleryItem'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\n/* export default class ImageGallery extends React.Component {\r\n    state = {\r\n    activeImgId: 0,\r\n    };\r\n\r\n\r\n    setActiveId = id => {\r\n        this.setState({activeImgId: id})\r\n    } */\r\nconst ImageGallery = ({ images, openModal }) =>  {\r\n   \r\n        return (\r\n            <ul className={s.imageGallery}>\r\n         {images.map(({ webformatURL, largeImageURL, tag, id }) => {\r\n                    return (\r\n                        <ImageGalleryItem key={id} webformatURL={webformatURL} largeImageURL={largeImageURL} tag={tag}\r\n                            openModal={() => openModal(webformatURL, largeImageURL, tag, id)}\r\n                        />\r\n                    )\r\n                })} \r\n            </ul>\r\n        )\r\n    }\r\n \r\n\r\nexport default ImageGallery;\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tag: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\n\r\nconst Button = ({ onClick }) => {\r\n    return (\r\n\r\n<button type=\"button\" onClick={onClick} className={s.button}>\r\n      Load more\r\n    </button>)\r\n}\r\n\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n}; ","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nexport default class  Modal extends Component  {\r\n    \r\n    componentDidMount() {\r\n        console.log('Modal componentDidMount');\r\n        window.addEventListener('keydown', this.handleKeyDown)\r\n    }\r\n    componentWillUnmount() {\r\n        console.log('Modal componentWillUnmount')\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n\r\n            this.props.onClose();\r\n        }\r\n    };\r\n\r\n\r\n    handleBackdropClick = e => {\r\n        console.log('backdrop');\r\n        console.log('currentTarget:', e.currentTarget);\r\n        console.log('target:', e.target);\r\n        \r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n}\r\n\r\n\r\n\r\n    render() {\r\n          const { image } = this.props;\r\n     return createPortal (\r\n         <div className={s.overlay} onClick={this.handleBackdropClick}>\r\n             <div className={s.modal}>\r\n                <img src={image.src} alt={image.alt} />{this.props.children}\r\n            </div>\r\n         </div>,\r\n     modalRoot,)\r\n}\r\n   \r\n}\r\n\r\n","\r\n\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nexport default function LoaderSpiner() {\r\n  return (\r\n    <div className={s.loader}>\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={120}\r\n        width={120}\r\n        /* timeout={3000} */\r\n      />\r\n    </div>\r\n  );\r\n}","import React from \"react\";\nimport Searchbar from './components/Searchbar/Searchbar';\nimport { ToastContainer} from \"react-toastify\";\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button';\nimport  Modal  from './components/Modal/Modal';\nimport s from './App.module.css';\nimport LoaderSpiner from \"./components/Loader/Loader\";\n\n\n\n\nclass App extends React.Component {\n  state = {\n    showModal: false,\n  \n    images: [],\n    page: 1,\n    searchQuery: '',\n    error: null,\n    selectedImage: null,\n    isLoading: false , \n    \n\n  };\n\n \n  componentDidUpdate(prevProps, prevState) {\n\n    \n  const { searchQuery, page, isLoading } = this.state;\n    if (prevState.searchQuery !== searchQuery || prevState.page !== page)\n    {\n     \n    if (prevState.isLoading !== true) {\n        this.setState({ isLoading: true });\n      }\n\n            \n      const API_KEY = \"21675881-9f2314d809854342b3af65054\";\n      const BASE_URL = \"https://pixabay.com/api\";\n\n      fetch(`${BASE_URL}/?q=${this.state.searchQuery}&page=${this.state.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\n        .then((response) => {\n          if (response.ok) {\n            return response.json()\n           \n          }\n          return Promise.reject(\n            new Error(`No image with name ${this.state.imageName}`),\n          );\n        })\n     \n        .then(data => data.hits)\n        .then(arrayImage => this.setState(prevState => ({ images: [...prevState.images, ...arrayImage], })))\n        .catch(error => this.setState({ error }))\n        .finally(() => {\n          this.setState({ isLoading: false });\n          window.scrollTo({\n            top: document.body.scrollHeight,\n            behavior: \"smooth\",\n          });\n        });\n\n    }\n   \n  }\n\n  resetState = () => {\n    this.setState({\n      searchQuery: '',\n      page: 1,\n      images: [],\n      selectedImage: null,\n    \n    });\n  };\n \n  \n  \n  handleFormSubmit = searchQuery => {\n      this.resetState();\n    this.setState({searchQuery})\n  };\n \n openModal = (src, alt) => {\n    this.setState({\n      showModal: true,\n      selectedImage: { src, alt },\n    });\n  };\n  closeModal = () => this.setState({ showModal: false });\n\n  onLoadMore = () => {\n    this.setState(prevState => ({ page: prevState.page + 1 ,  isLoading: true }));\n  };\n\n\n  render() {\n    const { searchQuery, showModal, error, status, images, isLoading, selectedImage } = this.state;\n   \n    return (\n        /* this.state.isLoading ? <LoaderSpiner /> :  */\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n         {error && <h1>{error.message}</h1>}\n        {searchQuery && <ImageGallery openModal={this.openModal} images={images}/>}\n        {!searchQuery && <h2>Type the name of the image</h2>}\n          <ToastContainer />\n        {isLoading && <LoaderSpiner />}\n        \n {images.length > 0 && <Button onClick={this.onLoadMore} />}\n        \n\n        {showModal && <Modal image={selectedImage} onClose={this.closeModal}  >\n        </ Modal >}\n      </div>\n    );\n  }\n }\n\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__1Y0_m\",\"searchForm\":\"Searchbar_searchForm__3J_Js\",\"searchForm_button\":\"Searchbar_searchForm_button__3HF1O\",\"searchForm_button_label\":\"Searchbar_searchForm_button_label__o89SU\",\"searchForm_input\":\"Searchbar_searchForm_input__thY1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__1WEPI\",\"imageGalleryItem\":\"ImageGallery_imageGalleryItem__2c9Tw\",\"imageGalleryItem_image\":\"ImageGallery_imageGalleryItem_image__2GAIx\"};"],"sourceRoot":""}